print("Part one:", [[([map_in[row][column] == 'S' and still_left.append(((row,column), 0)) for row in range(len(map_in)) for column in range(len(map_in[0]))], [still_left and [(rcd[0][0],rcd[0][1]) not in seen and (seen.add((rcd[0][0],rcd[0][1])), map_in[rcd[0][0]][rcd[0][1]] == 'E' and result.append(rcd[1]), [(0<=(rcd[0][0]+dr)<len(map_in) and 0<=(rcd[0][1]+dc)<len(map_in[0]) and score_map[(rcd[0][0]+dr)][(rcd[0][1]+dc)]<=1+score_map[rcd[0][0]][rcd[0][1]]) and still_left.insert(0, (((rcd[0][0]+dr),(rcd[0][1]+dc)),rcd[1]+1)) for dr,dc in [(-1,0),(0,1),(1,0),(0,-1)]]) for rcd in [still_left.pop()]] for _ in range((len(map_in) * len(map_in[0]) ** 2))], result[-1])[2] for score_map, still_left, seen, result in [([[(map_in[r][c] == 'S') + (map_in[r][c] == 'E') * 26 + (map_in[r][c] != 'S') * (map_in[r][c] != 'E') * (ord(map_in[r][c]) - ord('a') + 1) for c in range(len(map_in[0]))] for r in range(len(map_in))], list(), set(), list())]][0] for map_in in [open('input.txt').read().split('\n')]][0])
print("Part two:", [[([map_in[row][column] == 'a' and still_left.append(((row,column), 0)) for row in range(len(map_in)) for column in range(len(map_in[0]))], [still_left and [(rcd[0][0],rcd[0][1]) not in seen and (seen.add((rcd[0][0],rcd[0][1])), map_in[rcd[0][0]][rcd[0][1]] == 'E' and result.append(rcd[1]), [(0<=(rcd[0][0]+dr)<len(map_in) and 0<=(rcd[0][1]+dc)<len(map_in[0]) and score_map[(rcd[0][0]+dr)][(rcd[0][1]+dc)]<=1+score_map[rcd[0][0]][rcd[0][1]]) and still_left.insert(0, (((rcd[0][0]+dr),(rcd[0][1]+dc)),rcd[1]+1)) for dr,dc in [(-1,0),(0,1),(1,0),(0,-1)]]) for rcd in [still_left.pop()]] for _ in range((len(map_in) * len(map_in[0]) ** 2))], result[-1])[2] for score_map, still_left, seen, result in [([[(map_in[r][c] == 'S') + (map_in[r][c] == 'E') * 26 + (map_in[r][c] != 'S') * (map_in[r][c] != 'E') * (ord(map_in[r][c]) - ord('a') + 1) for c in range(len(map_in[0]))] for r in range(len(map_in))], list(), set(), list())]][0] for map_in in [open('input.txt').read().split('\n')]][0])